Brendan Neal
brendanneal12@gmail.com

Project 1 Goal: Solve 8 puzzle problem using Breadth First Search


File Name: ENPM661_Project1.py

IDE: Visual Studio CODE

Python Version: 3

IMPORTED LIBRARIES: numpy, copy

INSTRUCTIONS TO RUN CODE:

First of all, you need to run the code twice, testing each test case.

1. Hit Run
2. User inputs initial state matrix via prompt (column wise like in example)
    For the first test case, enter 1 6 7 for the first prompt, 2 0 5 for the second prompt, and 4 3 8 for the third prompt.
    For the second test case, enter 4 7 8 for the first prompt, 2 1 5 for the second prompt, and 3 6 0 for the third prompt.


3. User inputs goal state matrix via prompt (column wise like in example)
    For the first test case, enter 1 4 7 for the first prompt, 2 5 8 for the second prompt, and 3 0 6 for the third prompt.
    For the second test case, enter 1 4 7 for the first prompt, 2 5 8 for the second prompt, and 3 6 0 for the third prompt.


4. Script runs until complete!




Output to Terminal while code is running:
1. Prints the initial state.
2. While searching, the number of explored nodes and the number of unexplored nodes is printed to terminal.
3. Once goal state is reached, prints "Goal State Reached!" and "Searching Complete"
4. Path is printed to terminal.
5. "Generating Text Files" is printed to screen.
6. "Done!" is printed to screen when code is done.

Outputs to Workspace after code is done:
1. Nodepath.txt shows the state from start to goal node in columns.
2. NodesInfo.txt shows the node index, the parent node index, and the node itself in columns.
3. Nodes.txt shows all nodes explored.